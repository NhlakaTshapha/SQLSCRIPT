BEGIN TRANSACTION
SELECT * FROM BRANCH
COMMIT

BEGIN TRANSACTION
	DELETE FROM BRANCH WHERE BCODE=2;
	DELETE FROM BRANCH WHERE BCODE=4;
	SAVE TRANSACTION S1
	DELETE FROM BRANCH WHERE BCODE=3;

BEGIN TRANSACTION
ROLLBACK TRANSACTION S1


--ROLLUP AND CUBE CLAUSE
SELECT BNAME,LOCATION
FROM BRANCH 
GROUP BY ROLLUP(BNAME,LOCATION)


--TO CREATE A SCALAR FUNCTION

CREATE FUNCTION FNAME(@NAME VARCHAR(50))
RETURN VARCHAR(50)
AS 
BEGIN
		SELECT BNAME,COUNT(*)
		FROM BRANCH
		GROUP BY BNAME;
RETURN BNAME
END


CREATE TABLE EMP
(EID INT, 
ENAME VARCHAR(50),
SALARY MONEY,
DEPTNO INT)

SELECT * FROM EMP

-- RANKING FUNCTIONS
--ROW_NUMBER

SELECT ENAME,SALARY,
ROW_NUMBER() OVER(ORDER BY SALARY DESC) AS RANKS
FROM EMP

SELECT ENAME,SALARY,
RANK() OVER(ORDER BY SALARY DESC) AS RANKS
FROM EMP

SELECT ENAME,SALARY,
DENSE_RANK() OVER(ORDER BY SALARY DESC) AS RANKS
FROM EMP


--RANKING FUNCTION NOW WITH PARTITION 
--ROW_NUMBER
SELECT ENAME,DEPTNO,SALARY,
ROW_NUMBER() OVER(PARTITION BY DEPTNO ORDER BY SALARY DESC) AS RANKS
FROM EMP


--RANKING FUNCTION NOW WITH PARTITION 
--RANK
SELECT ENAME,DEPTNO,SALARY,
RANK() OVER(PARTITION BY DEPTNO ORDER BY SALARY DESC) AS RANKS
FROM EMP


--RANKING FUNCTION NOW WITH PARTITION 
--DENSE_RANK
SELECT ENAME,DEPTNO,SALARY,
DENSE_RANK() OVER(PARTITION BY DEPTNO ORDER BY SALARY DESC) AS RANKS
FROM EMP



--CREATE A TABLE VALUED FUNCTION 
--TO ACCEPT THE DNAME AS A PARAMETER AND RETURN THE LIST OF EMPLL=OYEE WHO ARE WORKING IN THE GIVEN DEPARTMENT NAME?

CREATE FUNCTION fnName(@dname varchar(50))
RETURNS TABLE
AS 
RETURN(SELECT * FROM EMPLOYEE
		WHERE DEPTNAME=@dname)

--CALL A FUNCTION

SELECT * FROM FNnAME('HR')
